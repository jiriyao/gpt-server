// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	"chatgptserver/code/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CommonRoute},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/from/:name",
					Handler: CodeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/question/async",
					Handler: ChatgptQuestionHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/question/sync",
					Handler: ChatgptQuestionSyncHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/question/auth",
					Handler: ChatgptAuthQuestionHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/chatgpt3"), rest.WithTimeout(10000*time.Millisecond),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CommonRoute},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/question/streamsync35",
					Handler: Chatgpt35StreamHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/chat-progress",
					Handler: ChatProcessRequestStreamHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/chatgpt3"), rest.WithTimeout(100000*time.Millisecond),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CommonRoute},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/login",
					Handler: LoginHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/sse/test",
					Handler: SseTestHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/chatgpt3"), rest.WithTimeout(100000*time.Millisecond),
	)
}
